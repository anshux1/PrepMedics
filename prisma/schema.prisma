generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([provider, providerAccountId])
}

model VerificationToken {
  identifier String
  token      String
  expires    DateTime

  @@id([identifier, token])
}

model Class {
  id        String   @id @default(cuid())
  className String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Exam {
  id        String    @id @default(cuid())
  examLogo  String
  examName  String
  isVisible Boolean
  position  Int
  subjects  Subject[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  Years     Years[]
}

model Years {
  id            String   @id @default(cuid())
  yearName      String
  yearShortName String
  examId        String
  isVisible     Boolean
  exam          Exam     @relation(fields: [examId], references: [id])
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model Subject {
  id            String   @id @default(cuid())
  subjectName   String
  shortName     String
  subjectImage  String
  examId        String
  exam          Exam     @relation(fields: [examId], references: [id])
  questionCount Int      @default(0)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}
